# __zshenv_lib_prepend_path VARIABLE DIRECTORY
#
# Prepend DIRECTORY to the colon-separated content of the scalar export
# VARIABLE and remove duplicates.  If DIRECTORY is not an existing
# directory on the local filesystem, do nothing, successfully.
__zshenv_lib_prepend_path() {
  local -r variable="${1:?}"
  local -r directory="${2:?}"
  local -a old_path
  local -a new_path

  if [[ ! -d "${directory}" ]]; then
    return 0
  fi

  old_path=(${(Ps.:.)variable})
  new_path=(${directory})
  for d in "${old_path[@]}"; do
    if [[ "${d}" != "${directory}" ]]; then
      new_path+="${d}"
    fi
  done

  eval "export ${variable}=${(j.:.)new_path}"
}

# __zshenv_memoise FUNCTION-NAME
#
# Cache and replay the output from FUNCTION-NAME, an expensive function.  Cached
# output will never expire on its own accord, though cached output on the
# filesystem may be safely unlinked at any time by hand.
__zshenv_memoise() {
  local -r funcname="${1:?}"
  local -r cachedir="${zshenvd}/_evalcache"
  local -r cache="${cachedir}/${funcname}"

  mkdir -p -m 0700 "${cachedir}"

  if [[ -r "${cache}" ]]; then
    cat "${cache}"
    return
  fi

  eval "${funcname}" | tee "${cache}"
}

__zshenv_lib_unfunction() {
  unfunction __zshenv_lib_prepend_path
  unfunction __zshenv_memoise
}

# vim:ft=zsh
